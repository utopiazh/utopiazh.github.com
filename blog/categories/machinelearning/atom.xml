<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: machinelearning | Coding For Fun]]></title>
  <link href="http://utopiazh.github.com/blog/categories/machinelearning/atom.xml" rel="self"/>
  <link href="http://utopiazh.github.com/"/>
  <updated>2013-03-10T20:12:37+08:00</updated>
  <id>http://utopiazh.github.com/</id>
  <author>
    <name><![CDATA[Hang Zhou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Notes:Practical Machine Learning in Python]]></title>
    <link href="http://utopiazh.github.com/blog/2013/03/10/notes-practical-machine-learning-in-python/"/>
    <updated>2013-03-10T18:54:00+08:00</updated>
    <id>http://utopiazh.github.com/blog/2013/03/10/notes-practical-machine-learning-in-python</id>
    <content type="html"><![CDATA[<p>Notes for video <a href="http://www.youtube.com/watch?v=__s45TTXxps">Practical Machine Learning in
Python</a>.</p>

<p><strong>Example: Home-runs and strikeouts predicating</strong></p>

<p>Questions:</p>

<ul>
<li>What features are strong predicators for home runs and strikeouts?</li>
<li>Given a particular situation, with what probability will the batter hit a
home run or strike out?</li>
</ul>


<p><strong>Gathering Data</strong></p>

<ul>
<li>Get the original data</li>
<li>Coalescing</li>
<li>Scrubbing (ensure consistency)</li>
<li>Select the training data</li>
</ul>


<p><strong>Select a ToolKit</strong></p>

<p><em>Trade off</em></p>

<ul>
<li>Speed (offline or realtime)</li>
<li>Transparency (internal visibility, customizability)</li>
<li>Support (community, etc)</li>
</ul>


<p><em>Available Options:</em></p>

<ul>
<li>External bindings of popular packages</li>
<li><p>Python Implementation</p>

<p>NLTK focus on NLP (Natural Lanaguage Processing with Python)
mlpy
PyML (SVM)
PyBrain
mdp-toolkit (abstraction over workflow)
scikit-learn (manager algorithms, active community)</p></li>
<li><p>DIY with Bascic building blocks</p>

<p>Python impl:  NumPy, SciPy
C/C++ impl: OpenCV, LIBSVM, LIBLinear</p></li>
</ul>


<p><strong>Feature Selection</strong></p>

<ul>
<li>scikit-learn: chi-square feature selection</li>
<li>visualize significance</li>
</ul>


<p><strong>Tips and Tricks</strong></p>

<ul>
<li>Persistent classifier internals (save trained and reuse)</li>
<li>Using generators where possible</li>
<li>Multicore text processing (use multiple python processes)</li>
</ul>


<h2>TODO</h2>

<ul>
<li>Chi-square</li>
<li>scikit-learn</li>
</ul>


<h2>Reference</h2>

<ul>
<li>ml-class.org</li>
<li>mloss.org (Machine learning open source software)</li>
</ul>

]]></content>
  </entry>
  
</feed>
